# Generated by Django 5.0.6 on 2025-01-19 15:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('playerstats', '0001_initial'),
        ('teamstats', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlayoffSeason',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('total_games_played', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegularSeason',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('games_scheduled', models.IntegerField(null=True)),
                ('total_games_played', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerPlayoffSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('games_played', models.IntegerField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('assists_pp', models.IntegerField(null=True)),
                ('assists_sh', models.IntegerField(null=True)),
                ('time_on_ice_seconds_pp', models.IntegerField(null=True)),
                ('time_on_ice_seconds_sh', models.IntegerField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('penalty_seconds_served', models.IntegerField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.FloatField(null=True)),
                ('giveaways', models.IntegerField(null=True)),
                ('takeaways', models.IntegerField(null=True)),
                ('blocked_shots', models.IntegerField(null=True)),
                ('plus_minus', models.IntegerField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='teamstats.team')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.playoffseason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoaliePlayoffSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('goals_against', models.IntegerField(null=True)),
                ('goals_against_average', models.FloatField(null=True)),
                ('shutouts', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('games_played', models.IntegerField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('shots_against_pp', models.IntegerField(null=True)),
                ('shots_against_sh', models.IntegerField(null=True)),
                ('saves', models.IntegerField(null=True)),
                ('saves_pp', models.IntegerField(null=True)),
                ('saves_sh', models.IntegerField(null=True)),
                ('save_percent', models.FloatField(null=True)),
                ('wins', models.IntegerField(null=True)),
                ('losses', models.IntegerField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='teamstats.team')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.playoffseason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerRegularSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('games_played', models.IntegerField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('assists_pp', models.IntegerField(null=True)),
                ('assists_sh', models.IntegerField(null=True)),
                ('time_on_ice_seconds_pp', models.IntegerField(null=True)),
                ('time_on_ice_seconds_sh', models.IntegerField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('penalty_seconds_served', models.IntegerField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.FloatField(null=True)),
                ('giveaways', models.IntegerField(null=True)),
                ('takeaways', models.IntegerField(null=True)),
                ('blocked_shots', models.IntegerField(null=True)),
                ('plus_minus', models.IntegerField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='teamstats.team')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.regularseason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoalieRegularSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('goals_against', models.IntegerField(null=True)),
                ('goals_against_average', models.FloatField(null=True)),
                ('shutouts', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('games_played', models.IntegerField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('shots_against_pp', models.IntegerField(null=True)),
                ('shots_against_sh', models.IntegerField(null=True)),
                ('saves', models.IntegerField(null=True)),
                ('saves_pp', models.IntegerField(null=True)),
                ('saves_sh', models.IntegerField(null=True)),
                ('save_percent', models.FloatField(null=True)),
                ('wins', models.IntegerField(null=True)),
                ('losses', models.IntegerField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='teamstats.team')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.regularseason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamPlayoffSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games_played', models.IntegerField(null=True)),
                ('wins', models.IntegerField(null=True)),
                ('home_wins', models.IntegerField(null=True)),
                ('away_wins', models.IntegerField(null=True)),
                ('ties', models.IntegerField(null=True)),
                ('home_ties', models.IntegerField(null=True)),
                ('away_ties', models.IntegerField(null=True)),
                ('losses', models.IntegerField(null=True)),
                ('home_losses', models.IntegerField(null=True)),
                ('away_losses', models.IntegerField(null=True)),
                ('overtime_losses', models.IntegerField(null=True)),
                ('home_overtime_losses', models.IntegerField(null=True)),
                ('away_overtime_losses', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('goals', models.IntegerField(null=True)),
                ('goals_per_game', models.FloatField(null=True)),
                ('goals_against', models.IntegerField(null=True)),
                ('goals_against_per_game', models.FloatField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_against_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('goals_against_sh', models.IntegerField(null=True)),
                ('pp_chances', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('pp_percent', models.FloatField(null=True)),
                ('pk_percent', models.FloatField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('shots_per_game', models.FloatField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('shots_against_per_game', models.FloatField(null=True)),
                ('shot_percent', models.FloatField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.FloatField(null=True)),
                ('save_percent', models.FloatField(null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.playoffseason')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamstats.team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamRegularSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games_played', models.IntegerField(null=True)),
                ('wins', models.IntegerField(null=True)),
                ('home_wins', models.IntegerField(null=True)),
                ('away_wins', models.IntegerField(null=True)),
                ('ties', models.IntegerField(null=True)),
                ('home_ties', models.IntegerField(null=True)),
                ('away_ties', models.IntegerField(null=True)),
                ('losses', models.IntegerField(null=True)),
                ('home_losses', models.IntegerField(null=True)),
                ('away_losses', models.IntegerField(null=True)),
                ('overtime_losses', models.IntegerField(null=True)),
                ('home_overtime_losses', models.IntegerField(null=True)),
                ('away_overtime_losses', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('goals', models.IntegerField(null=True)),
                ('goals_per_game', models.FloatField(null=True)),
                ('goals_against', models.IntegerField(null=True)),
                ('goals_against_per_game', models.FloatField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_against_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('goals_against_sh', models.IntegerField(null=True)),
                ('pp_chances', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('pp_percent', models.FloatField(null=True)),
                ('pk_percent', models.FloatField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('shots_per_game', models.FloatField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('shots_against_per_game', models.FloatField(null=True)),
                ('shot_percent', models.FloatField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.FloatField(null=True)),
                ('save_percent', models.FloatField(null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.regularseason')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamstats.team')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
