# Generated by Django 5.0.6 on 2025-01-19 15:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('playerstats', '0001_initial'),
        ('seasonstats', '0001_initial'),
        ('teamstats', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField()),
                ('period_time_left_seconds', models.IntegerField()),
                ('event_type', models.CharField(max_length=20)),
                ('action', models.CharField(max_length=50)),
                ('outcome', models.CharField(max_length=20)),
                ('coordinates_x', models.IntegerField()),
                ('coordinates_y', models.IntegerField()),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='playerstats.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayoffGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_date', models.DateField(null=True)),
                ('game_start_time', models.DateTimeField(null=True)),
                ('away_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_away_team', to='teamstats.team')),
                ('home_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_home_team', to='teamstats.team')),
                ('players', models.ManyToManyField(to='playerstats.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.playoffseason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPlayoffGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField(null=True)),
                ('goals', models.IntegerField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('assists_pp', models.IntegerField(null=True)),
                ('assists_sh', models.IntegerField(null=True)),
                ('time_on_ice_minutes', models.IntegerField(null=True)),
                ('time_on_ice_minutes_pp', models.IntegerField(null=True)),
                ('time_on_ice_minutes_sh', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('time_on_ice_seconds_pp', models.IntegerField(null=True)),
                ('time_on_ice_seconds_sh', models.IntegerField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('penalty_minutes_served', models.IntegerField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.IntegerField(null=True)),
                ('giveaways', models.IntegerField(null=True)),
                ('takeaways', models.IntegerField(null=True)),
                ('blocked_shots', models.IntegerField(null=True)),
                ('plus_minus', models.IntegerField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestats.playoffgame')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoaliePlayoffGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(null=True)),
                ('game_number', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('time_on_ice_minutes', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('shots_against_pp', models.IntegerField(null=True)),
                ('shots_against_sh', models.IntegerField(null=True)),
                ('saves', models.IntegerField(null=True)),
                ('saves_pp', models.IntegerField(null=True)),
                ('saves_sh', models.IntegerField(null=True)),
                ('did_win', models.BooleanField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestats.playoffgame')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegularGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_date', models.DateField(null=True)),
                ('game_start_time', models.DateTimeField(null=True)),
                ('away_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_away_team', to='teamstats.team')),
                ('home_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_home_team', to='teamstats.team')),
                ('players', models.ManyToManyField(to='playerstats.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seasonstats.regularseason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerRegularGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField(null=True)),
                ('goals', models.IntegerField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('assists_pp', models.IntegerField(null=True)),
                ('assists_sh', models.IntegerField(null=True)),
                ('time_on_ice_minutes', models.IntegerField(null=True)),
                ('time_on_ice_minutes_pp', models.IntegerField(null=True)),
                ('time_on_ice_minutes_sh', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('time_on_ice_seconds_pp', models.IntegerField(null=True)),
                ('time_on_ice_seconds_sh', models.IntegerField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('penalty_minutes_served', models.IntegerField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.IntegerField(null=True)),
                ('giveaways', models.IntegerField(null=True)),
                ('takeaways', models.IntegerField(null=True)),
                ('blocked_shots', models.IntegerField(null=True)),
                ('plus_minus', models.IntegerField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestats.regulargame')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoalieRegularGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(null=True)),
                ('game_number', models.IntegerField(null=True)),
                ('assists', models.IntegerField(null=True)),
                ('time_on_ice_minutes', models.IntegerField(null=True)),
                ('time_on_ice_seconds', models.IntegerField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('shots_against_pp', models.IntegerField(null=True)),
                ('shots_against_sh', models.IntegerField(null=True)),
                ('saves', models.IntegerField(null=True)),
                ('saves_pp', models.IntegerField(null=True)),
                ('saves_sh', models.IntegerField(null=True)),
                ('did_win', models.BooleanField(null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playerstats.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestats.regulargame')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamPlayoffGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField(null=True)),
                ('goals', models.IntegerField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('goals_against', models.IntegerField(null=True)),
                ('goals_against_pp', models.IntegerField(null=True)),
                ('goals_against_sh', models.IntegerField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('penalty_seconds_served', models.FloatField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.FloatField(null=True)),
                ('giveaways', models.IntegerField(null=True)),
                ('takeaways', models.IntegerField(null=True)),
                ('blocked_shots', models.IntegerField(null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestats.playoffgame')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamstats.team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamRegularGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField(null=True)),
                ('goals', models.IntegerField(null=True)),
                ('goals_pp', models.IntegerField(null=True)),
                ('goals_sh', models.IntegerField(null=True)),
                ('goals_against', models.IntegerField(null=True)),
                ('goals_against_pp', models.IntegerField(null=True)),
                ('goals_against_sh', models.IntegerField(null=True)),
                ('shots', models.IntegerField(null=True)),
                ('shots_against', models.IntegerField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('penalty_minutes', models.IntegerField(null=True)),
                ('penalties_taken', models.IntegerField(null=True)),
                ('penalty_seconds_served', models.FloatField(null=True)),
                ('faceoffs_taken', models.IntegerField(null=True)),
                ('faceoffs_won', models.IntegerField(null=True)),
                ('faceoffs_lost', models.IntegerField(null=True)),
                ('faceoff_percent', models.FloatField(null=True)),
                ('giveaways', models.IntegerField(null=True)),
                ('takeaways', models.IntegerField(null=True)),
                ('blocked_shots', models.IntegerField(null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestats.regulargame')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamstats.team')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
